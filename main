hello_world.py
This is a simple Python script that prints "Hello, World!" to the console.

print("Hello, World!")



complex_script.py
This is a more complex script that could include external dependencies and requires additional considerations when converting to an executable.

import sys

def main():
    print(f"Arguments: {sys.argv}")

if __name__ == "__main__":
    main()


How to Convert a Python Script to an Executable ?

Run PyInstaller to create the executable:

pyinstaller --onefile hello_world.py

PyInstaller Settings
--key Setting
The --key setting in PyInstaller is used for encryption. It specifies a key to encrypt the content of the bundled executable. This can be useful if you need to protect the source code or sensitive data.

Example usage:

bash
Copier le code
pyinstaller --onefile --key YOUR_SECRET_KEY your_script.py
In this command, YOUR_SECRET_KEY is a string you provide. PyInstaller will use this key to encrypt the content of the executable. This makes it harder to reverse-engineer the executable to access the source code.

